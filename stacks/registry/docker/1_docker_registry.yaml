apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: registry-storage-claim
  labels:
    app: docker-registry
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi


## use this if you have an external load balancer
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: docker-registry-ingress
#   annotations:
#     kubernetes.io/ingress.class: "traefik"
# spec:
#   rules:
#   - host: registry.derp.work
#     http:
#       paths:
#       - path: /
#         backend:
#           service:
#             name: docker-registry-service
#             port:
#               number: 5000
#         pathType: Exact

---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry-service
  labels:
    run: docker-registry
spec:
  type: LoadBalancer
  selector:
    app: docker-registry
  ports:
    - protocol: TCP
      port: 5000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  labels:
    app: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
      - name: docker-registry
        image: registry
        ports:
        - containerPort: 5000
          protocol: TCP
        volumeMounts:
        - name: storage
          mountPath: /var/lib/registry
        env:
        - name: REGISTRY_HTTP_ADDR
          value: :5000
        - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
          value: /var/lib/registry
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: registry-storage-claim
