#adapted from https://towardsdatascience.com/jupyter-notebook-spark-on-kubernetes-880af7e06351

apiVersion: v1
kind: ServiceAccount
metadata:
  name: jupyter
  labels:
    release: jupyter
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: spark-spawner
  labels:
    release: jupyter
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - get
  - delete
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - create
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - create
  - list
  - watch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jupyter
  labels:
    release: jupyter
  namespace: spark
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: spark-spawner
subjects:
- kind: ServiceAccount
  name: jupyter
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: jupyter
  labels:
    release: jupyter
spec:
  type: ClusterIP
  selector:
    release: jupyter
  ports:
  - name: http
    port: 8888
    protocol: TCP
  - name: blockmanager
    port: 7777
    protocol: TCP
  - name: driver
    port: 2222
    protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: jupyter-headless
  labels:
    release: jupyter
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: false
  selector:
    release: jupyter
  ports:
  - name: http
    port: 8888
    protocol: TCP
  - name: blockmanager
    port: 7777
    protocol: TCP
  - name: driver
    port: 2222
    protocol: TCP
---

# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: notebook-storage-claim
#   labels:
#     release: jupyter
# spec:
#   selector:
#     matchLabels:
#       release: jupyter
#   storageClassName: nfs
#   accessModes:
#     - ReadWriteMany
#   resources:
#     requests:
#       storage: 100Gi


---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jupyter
  labels:
    release: jupyter
spec:
  replicas:
  updateStrategy:
    type: RollingUpdate
  serviceName: jupyter-headless
  podManagementPolicy: Parallel
  volumeClaimTemplates:
  - metadata:
      name: notebook-storage
      labels:
        release: jupyter
    spec:
      accessModes:
      - ReadWriteMany
      volumeMode: Filesystem
      volumeName: notebook-storage
      resources:
        requests:
          storage: 100Gi
      storageClassName: nfs
  selector:
    matchLabels:
      release: jupyter
  template:
    metadata:
      labels:
        release: jupyter
      annotations:
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      serviceAccountName: jupyter
      securityContext:
          fsGroup: 1000
      dnsConfig:
        options:
        - name: ndots
          value: "1"
      containers:
      - name: jupyter
        image: "registry.derp.work/datamechanics-spark3.2.1-java11-jupiter:0.0.7"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8888
          protocol: TCP
        - name: blockmanager
          containerPort: 7777
          protocol: TCP
        - name: driver
          containerPort: 2222
          protocol: TCP
        volumeMounts:
        - name: notebook-storage
          mountPath: /home/sparkuser
        resources:
          limits:
            cpu: 2000m
            memory: 4096Mi
          requests:
            cpu: 2000m
            memory: 4096Mi